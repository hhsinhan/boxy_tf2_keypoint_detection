# CenterNet meta-architecture from the "Objects as Points" [1] paper
# with the ResNet-v2-50 backbone. The ResNet backbone has a few differences
# as compared to the one mentioned in the paper, hence the performance is
# slightly worse. This config is TPU comptatible.
# [1]: https://arxiv.org/abs/1904.07850

model {
  center_net {
    num_classes: 1
    feature_extractor {
      type: "mobilenet_v2_fpn"
    }
    image_resizer {
      fixed_shape_resizer {
        height:512
        width:512
      }
    }
    object_detection_task {
      task_loss_weight: 1.0
      offset_loss_weight: 1.0
      scale_loss_weight: 0.1
      localization_loss {
        l1_localization_loss {
        }
      }
    }
    object_center_params {
      object_center_loss_weight: 1.0
      min_box_overlap_iou: 0.7
      max_box_predictions: 100
      classification_loss {
        penalty_reduced_logistic_focal_loss {
          alpha: 2.0
          beta: 4.0
        }
      }
    }

    keypoint_label_map_path: "./data/boxy_keypoints_label_map.pbtxt"
    keypoint_estimation_task {
      task_name: "human_pose"
      task_loss_weight: 1.0
      loss {
        localization_loss {
          l1_localization_loss {
          }
        }
        classification_loss {
          penalty_reduced_logistic_focal_loss {
            alpha: 2.0
            beta: 4.0
          }
        }
      }
      keypoint_class_name: "vehicle"
      keypoint_label_to_std {
        key: "rear_lt"
        value: 1.0
      }
      keypoint_label_to_std {
        key: "rear_rb"
        value: 1.0
      }
      keypoint_label_to_std {
        key: "p0"
        value: 1.0
      }
      keypoint_label_to_std {
        key: "p1"
        value: 1.0
      }
      keypoint_label_to_std {
        key: "p2"
        value: 1.0
      }
      keypoint_label_to_std {
        key: "p3"
        value: 1.0
      }
      keypoint_regression_loss_weight: 0.1
      keypoint_heatmap_loss_weight: 1.0
      keypoint_offset_loss_weight: 1.0
      offset_peak_radius: 3
      per_keypoint_offset: true
    }
  }
}

train_config: {

  batch_size: 9
  num_steps: 130000

  data_augmentation_options {
    random_image_scale {
      min_scale_ratio: 0.3
      max_scale_ratio: 0.8
    }
  }

  data_augmentation_options {
    random_horizontal_flip {
      keypoint_flip_permutation: 1
      keypoint_flip_permutation: 0
      keypoint_flip_permutation: 2
      keypoint_flip_permutation: 3
      keypoint_flip_permutation: 4
      keypoint_flip_permutation: 5
    }
  }

  data_augmentation_options {
    random_crop_to_aspect_ratio {
      aspect_ratio: 1.777
    }
  }

  data_augmentation_options {
    random_adjust_brightness {
      max_delta : 0.3
    }
  }

  data_augmentation_options {
    random_adjust_hue {
      max_delta: 0.05
    }
  }

  data_augmentation_options {
    random_adjust_contrast {
     min_delta: 0.8
     max_delta: 1.2
    }
  }

  data_augmentation_options {
    random_adjust_saturation {
      min_delta: 0.8
      max_delta: 1.2
    }
  }

  data_augmentation_options {
    remove_small_objects {
      largest_output_feature_width : 128.0
      largest_output_feature_height : 72.0
    }
  }

  data_augmentation_options {
    random_jpeg_quality {
      min_jpeg_quality: 20
      max_jpeg_quality: 60
    }
  }

  optimizer {
    adam_optimizer: {
      epsilon: 1e-7  # Match tf.keras.optimizers.Adam's default.
      learning_rate: {
        cosine_decay_learning_rate {
          learning_rate_base: 1e-3
          total_steps: 130000
          warmup_learning_rate: 2.5e-4
          warmup_steps: 5000
        }
      }
    }
    use_moving_average: false
  }
  max_number_of_boxes: 100
  unpad_groundtruth_tensors: false

}

train_input_reader: {
  num_prefetch_batches:100
  queue_capacity: 100
  min_after_dequeue: 50
  read_block_length: 5
  prefetch_size: 128
  num_parallel_map_calls: 16
  label_map_path: "data/boxy_label_map.pbtxt"
  tf_record_input_reader {
    input_path: "PATH OF TFRECORD"
  }
  num_keypoints: 6
}

eval_config: {
  metrics_set: "coco_detection_metrics"
  use_moving_averages: false
  num_visualizations: 10
  max_num_boxes_to_visualize: 20
  min_score_threshold: 0.2
  batch_size: 1;
  parameterized_metric {
    coco_keypoint_metrics {
      class_label: "person"
      keypoint_label_to_sigmas {
        key: "rear_lt"
        value: 0.025
      }
      keypoint_label_to_sigmas {
        key: "rear_rb"
        value: 0.025
      }
      keypoint_label_to_sigmas {
        key: "p0"
        value: 0.025
      }
      keypoint_label_to_sigmas {
        key: "p1"
        value: 0.025
      }
      keypoint_label_to_sigmas {
        key: "p2"
        value: 0.025
      }
      keypoint_label_to_sigmas {
        key: "p3"
        value: 0.025
      }
    }
  }
  # Provide the edges to connect the keypoints. The setting is suitable for
  # Boxy's 6 keypoints.
  keypoint_edge {  # nose-left eye
    start: 0
    end: 1
  }
  keypoint_edge {  # nose-right eye
    start: 1
    end: 2
  }
  keypoint_edge {  # left eye-left ear
    start: 3
    end: 4
  }
  keypoint_edge {  # right eye-right ear
    start: 4
    end: 5
  }
  keypoint_edge {  # nose-left shoulder
    start: 5
    end: 0
  }
}

eval_input_reader: {
  label_map_path: "data/boxy_label_map.pbtxt"
  shuffle: false
  num_epochs: 1
  tf_record_input_reader {
    input_path: "PATH OF TFRECORD"
  }
  num_keypoints: 6
}
